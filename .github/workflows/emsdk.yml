---
name: EMSDK smoke tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '30 4 * * *'
  workflow_dispatch:

jobs:
  distros:
    name: "EMSDK ${{ matrix.emsdk_version }} on Python ${{ matrix.python_version }}, ${{ matrix.flavor }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        emsdk_version:
          - "3.1.15"
          - latest
          # tot is tip-of-tree
          - tot-upstream
        python_version:
          - "3.11"
          - "main"
        flavor:
          - node-dl
          - node-pthreads
          - browser
        include:
          - flavor: node-dl
            configure_args: >-
              --with-emscripten-target=node
              --enable-wasm-dynamic-linking
              --disable-wasm-pthreads
          - flavor: node-pthreads
            configure_args: >-
              --with-emscripten-target=node
              --disable-wasm-dynamic-linking
              --enable-wasm-pthreads
          - flavor: browser
            configure_args: >-
                --with-emscripten-target=browser
                --enable-wasm-dynamic-linking
                --disable-wasm-pthreads
    steps:
      - name: Install build dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get -yq install build-essential pkg-config ccache zlib1g-dev
      - name: Set env vars
        run: |
          echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV
          echo "CPYTHON_DIR=$GITHUB_WORKSPACE/cpython" >> $GITHUB_ENV
          echo "EMSDK_DIR=$GITHUB_WORKSPACE/emsdk" >> $GITHUB_ENV
      - name: Configure ccache action
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: py${{ matrix.python_version }}-emsdk$${{ matrix.emsdk_version }}
      - name: Checkout EMSDK
        uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          path: ${{ env.EMSDK_DIR }}
          ref: main
      - name: Checkout CPython
        uses: actions/checkout@v3
        with:
          repository: python/cpython
          path: ${{ env.CPYTHON_DIR }}
          ref: "${{ matrix.python_version }}"
      - name: Install EMSDK ${{ matrix.emsdk_version }}
        run: $EMSDK_DIR/emsdk install ${{ matrix.emsdk_version }}
      - name: Activate EMSDK ${{ matrix.emsdk_version }}
        run: $EMSDK_DIR/emsdk activate ${{ matrix.emsdk_version }}
      - name: Build "build" Python
        run: |
          set -e
          mkdir -p $CPYTHON_DIR/builddir/build
          cd $CPYTHON_DIR/builddir/build
          ../../configure -C
          make -j$(nproc)
      - name: Build "host" Python
        run: |
          set -ex
          . $EMSDK_DIR/emsdk_env.sh
          export EM_COMPILER_WRAPPER=ccache
          mkdir -p $CPYTHON_DIR/builddir/host
          cd $CPYTHON_DIR/builddir/host
          embuilder build zlib bzip2 sqlite3
          CONFIG_SITE=../../Tools/wasm/config.site-wasm32-emscripten \
              emconfigure ../../configure -C \
                --build=$(../../config.guess) \
                --host=wasm32-unknown-emscripten \
                --with-build-python=$(pwd)/../build/python \
                ${{ matrix.configure_args }}
          emmake make
      - name: Run pythoninfo
        run: |
          set -e
          . $EMSDK_DIR/emsdk_env.sh
          make -C $CPYTHON_DIR/builddir/host pythoninfo
        if: "${{ matrix.flavor != 'browser' }}"
      - name: Run tests
        run: |
          set -e
          . $EMSDK_DIR/emsdk_env.sh
          make -C $CPYTHON_DIR/builddir/host buildbottest
        if: "${{ matrix.flavor != 'browser' }}"
      - name: Copy license, create commit.txt
        run: |
          set -e
          pushd $CPYTHON_DIR/builddir/host
          git --git-dir=$CPYTHON_DIR/.git rev-parse HEAD > commit.txt
          cp $CPYTHON_DIR/LICENSE .
          popd
      - name: Copy stdlib
        run: |
          set -e
          pushd $CPYTHON_DIR/builddir/host
          cp -R $CPYTHON_DIR/Lib .
          rm -rf Lib/curses Lib/ctypes/test/ Lib/ensurepip/ Lib/distutils/
          rm -rf Lib/lib2to3/ Lib/idlelib/ Lib/test/ Lib/multiprocessing/
          rm -rf Lib/tkinter/ Lib/turtledemo/ Lib/venv/ Lib/unittest/test/
          find -name __pycache__ | xargs rm -rf
          popd
        if: "${{ matrix.flavor != 'browser' }}"
      - name: "Upload Emscripten Node artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: emscripten-${{ matrix.flavor }}-py_${{ matrix.python_version }}-emsdk_${{ matrix.emsdk_version }}
          retention-days: 7
          path: |
            ${{ env.CPYTHON_DIR }}/builddir/host/LICENSE
            ${{ env.CPYTHON_DIR }}/builddir/host/commit.txt
            ${{ env.CPYTHON_DIR }}/builddir/host/python.wasm
            ${{ env.CPYTHON_DIR }}/builddir/host/python.worker.js
            ${{ env.CPYTHON_DIR }}/builddir/host/python.js
            ${{ env.CPYTHON_DIR }}/builddir/host/pybuilddir.txt
            ${{ env.CPYTHON_DIR }}/builddir/host/build/lib.emscripten-wasm32-3.*/_sysconfigdata__emscripten_wasm32-emscripten.py
            ${{ env.CPYTHON_DIR }}/builddir/host/Lib/
          if-no-files-found: error        
        if: "${{ matrix.flavor != 'browser' }}"
      - name: "Upload Emscripten Browser artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: emscripten-${{ matrix.flavor }}-py_${{ matrix.python_version }}-emsdk_${{ matrix.emsdk_version }}
          retention-days: 7
          path: |
            ${{ env.CPYTHON_DIR }}/builddir/host/LICENSE
            ${{ env.CPYTHON_DIR }}/builddir/host/commit.txt
            ${{ env.CPYTHON_DIR }}/builddir/host/python.data
            ${{ env.CPYTHON_DIR }}/builddir/host/python.html
            ${{ env.CPYTHON_DIR }}/builddir/host/python.js
            ${{ env.CPYTHON_DIR }}/builddir/host/python.worker.js
            ${{ env.CPYTHON_DIR }}/builddir/host/python.wasm
          if-no-files-found: error        
        if: "${{ matrix.flavor == 'browser' }}"
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: build-emscripten-${{ matrix.flavor }}-py_${{ matrix.python_version }}-emsdk_${{ matrix.emsdk_version }}
          retention-days: 7
          path: |
            ${{ env.CPYTHON_DIR }}/builddir/host/config.log
            ${{ env.CPYTHON_DIR }}/builddir/host/config.cache
            ${{ env.CPYTHON_DIR }}/builddir/host/Makefile
            ${{ env.CPYTHON_DIR }}/builddir/host/pyconfig.h
            ${{ env.CPYTHON_DIR }}/builddir/host/libpython*.a
            ${{ env.CPYTHON_DIR }}/builddir/host/Modules/Setup.local
            ${{ env.CPYTHON_DIR }}/builddir/host/Modules/Setup.stdlib
            ${{ env.CPYTHON_DIR }}/builddir/host/Modules/config.c
            ${{ env.CPYTHON_DIR }}/builddir/host/Modules/_decimal/libmpdec/libmpdec.a
            ${{ env.CPYTHON_DIR }}/builddir/host/Modules/expat/libexpat.a
            ${{ env.CPYTHON_DIR }}/builddir/host/Programs/python.o
          if-no-files-found: error
