---
name: WASI SDK nightly tests

on:
  # push:
  #   branches:
  #     - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

jobs:
  wasi:
    name: "WASI SDK ${{ matrix.wasisdk_version }} on Python ${{ matrix.python_version }}, wasmtime ${{ matrix.wasmtime_version }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        wasisdk_version:
          - "16"
        python_version:
          - "3.11"
          - "main"
        wasmtime_version:
          - "v0.39.1"
          - "latest"
    steps:
      - uses: actions/checkout@v2
      - name: "Clone and build 'build' Python ${{ matrix.python_version }}"
        uses: ./.github/actions/common_setup
        id: common
        with:
          python_version: "${{ matrix.python_version }}"
          cache_suffix: "wasi${{ matrix.wasisdk_version }}"
      - name: Install WASI SDK & wasmtime
        uses: ./.github/actions/install_wasi
        id: install
        with:
          wasisdk_version: "${{ matrix.wasisdk_version }}"
          wasmtime_version: "${{ matrix.wasmtime_version }}"
      - name: "Build ${{ matrix.python_version }}"
        uses: ./.github/actions/build_wasi
        id: build
        with:
          wasisdk_version: "${{ matrix.wasisdk_version }}"
          wasmtime_version: "${{ matrix.wasmtime_version }}"
      - name: Run pythoninfo
        shell: bash
        working-directory: "${{ env.HOST_PYTHON_DIR }}"
        run: make pythoninfo
      - name: Run tests
        shell: bash
        working-directory: "${{ env.HOST_PYTHON_DIR }}"
        run: |
          set -ex
          make buildbottest TESTOPTS="-i '*.test_srcdir' -j2"
      - name: "Package ${{ matrix.python_version }}"
        uses: ./.github/actions/package_wasi
        id: package
        with:
          wasisdk_version: "${{ matrix.wasisdk_version }}"
        if: "${{ matrix.wasmtime_version == 'latest' }}"
